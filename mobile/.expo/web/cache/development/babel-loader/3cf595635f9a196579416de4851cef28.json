{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Higor\\\\Documents\\\\Github\\\\semana-omnistack-10\\\\mobile\\\\src\\\\pages\\\\Main.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { requestPermissionsAsync, getCurrentPositionAsync } from 'expo-location';\nimport MapView, { Marker, Callout } from 'react-native-maps';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport api from \"../services/api\";\nimport { connect, disconnect, subscribeToNewDevs } from \"../services/socket\";\n\nfunction Main(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      devs = _useState2[0],\n      setDevs = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentRegion = _useState4[0],\n      setCurrentRegion = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      techs = _useState6[0],\n      setTechs = _useState6[1];\n\n  useEffect(function () {\n    function loadInitialPosition() {\n      var _await$requestPermiss, granted, _await$getCurrentPosi, coords, latitude, longitude;\n\n      return _regeneratorRuntime.async(function loadInitialPosition$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(requestPermissionsAsync());\n\n            case 2:\n              _await$requestPermiss = _context.sent;\n              granted = _await$requestPermiss.granted;\n\n              if (!granted) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(getCurrentPositionAsync({\n                enableHighAccuracy: true\n              }));\n\n            case 7:\n              _await$getCurrentPosi = _context.sent;\n              coords = _await$getCurrentPosi.coords;\n              latitude = coords.latitude, longitude = coords.longitude;\n              setCurrentRegion({\n                latitude: latitude,\n                longitude: longitude,\n                latitudeDelta: 0.04,\n                longitudeDelta: 0.04\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    loadInitialPosition();\n  }, []);\n  useEffect(function () {\n    subscribeToNewDevs(function (dev) {\n      return setDevs([].concat(_toConsumableArray(devs), [dev]));\n    });\n  }, [devs]);\n\n  function setUpWebSocket() {\n    disconnect();\n    var latitude = currentRegion.latitude,\n        longitude = currentRegion.longitude;\n    connect(latitude, longitude, techs);\n  }\n\n  function loadDevs() {\n    var latitude, longitude, response;\n    return _regeneratorRuntime.async(function loadDevs$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            latitude = currentRegion.latitude, longitude = currentRegion.longitude;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(api.get('/search', {\n              params: {\n                latitude: latitude,\n                longitude: longitude,\n                techs: techs\n              }\n            }));\n\n          case 3:\n            response = _context2.sent;\n            console.log(response.data);\n            setDevs(response.data);\n            setUpWebSocket();\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function handleRegionChanged(region) {\n    setCurrentRegion(region);\n  }\n\n  if (!currentRegion) {\n    return null;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(MapView, {\n    onRegionChangeComplete: handleRegionChanged,\n    initialRegion: currentRegion,\n    style: styles.map,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    }\n  }, devs.map(function (dev) {\n    return React.createElement(Marker, {\n      key: dev._id,\n      coordinate: {\n        latitude: dev.location.coordinates[1],\n        longitude: dev.location.coordinates[0]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      }\n    }, React.createElement(Image, {\n      style: styles.avatar,\n      source: {\n        uri: dev.avatar_url\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      }\n    }), React.createElement(Callout, {\n      onPress: function onPress() {\n        navigation.navigate('Profile', {\n          github_username: dev.github_username\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      }\n    }, React.createElement(View, {\n      style: styles.callout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      }\n    }, React.createElement(Text, {\n      style: styles.devName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      }\n    }, dev.name), React.createElement(Text, {\n      style: styles.devBio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      }\n    }, dev.bio), React.createElement(Text, {\n      style: styles.devTechs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      }\n    }, dev.techs.join(', ')))));\n  })), React.createElement(View, {\n    style: styles.searchForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    }\n  }, React.createElement(TextInput, {\n    style: styles.searchInput,\n    placeholder: \"Buscar devs por techs\",\n    placeholderTextColor: \"#999\",\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    value: techs,\n    onChangeText: setTechs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: loadDevs,\n    style: styles.loadButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"my-location\",\n    syze: 20,\n    color: \"#FFF\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  map: {\n    flex: 1\n  },\n  avatar: {\n    width: 54,\n    height: 54,\n    borderRadius: 4,\n    borderWidth: 4,\n    borderColor: '#fff'\n  },\n  callout: {\n    width: 260\n  },\n  devName: {\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  devBio: {\n    color: '#666',\n    marginTop: 5\n  },\n  devTechs: {\n    marginTop: 5\n  },\n  searchForm: {\n    position: \"absolute\",\n    top: 20,\n    left: 20,\n    right: 20,\n    zIndex: 5,\n    flexDirection: \"row\"\n  },\n  searchInput: {\n    flex: 1,\n    height: 50,\n    backgroundColor: '#fff',\n    color: '#333',\n    borderRadius: 25,\n    paddingHorizontal: 20,\n    fontSize: 16,\n    shadowColor: '#000',\n    shadowOpacity: 0.2,\n    shadowOffset: {\n      width: 4,\n      height: 4\n    },\n    elevation: 2\n  },\n  loadButton: {\n    height: 50,\n    width: 50,\n    backgroundColor: '#8e4dff',\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginLeft: 15\n  }\n});\nexport default Main;","map":{"version":3,"sources":["C:/Users/Higor/Documents/Github/semana-omnistack-10/mobile/src/pages/Main.js"],"names":["React","useEffect","useState","requestPermissionsAsync","getCurrentPositionAsync","MapView","Marker","Callout","MaterialIcons","api","connect","disconnect","subscribeToNewDevs","Main","navigation","devs","setDevs","currentRegion","setCurrentRegion","techs","setTechs","loadInitialPosition","granted","enableHighAccuracy","coords","latitude","longitude","latitudeDelta","longitudeDelta","dev","setUpWebSocket","loadDevs","get","params","response","console","log","data","handleRegionChanged","region","styles","map","_id","location","coordinates","avatar","uri","avatar_url","navigate","github_username","callout","devName","name","devBio","bio","devTechs","join","searchForm","searchInput","loadButton","StyleSheet","create","flex","width","height","borderRadius","borderWidth","borderColor","fontWeight","fontSize","color","marginTop","position","top","left","right","zIndex","flexDirection","backgroundColor","paddingHorizontal","shadowColor","shadowOpacity","shadowOffset","elevation","justifyContent","alignItems","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Image, View, Text, TextInput, TouchableOpacity } from 'react-native';\r\nimport { requestPermissionsAsync, getCurrentPositionAsync } from 'expo-location';\r\nimport MapView, { Marker, Callout } from 'react-native-maps';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\n\r\nimport api from '../services/api';\r\nimport { connect, disconnect, subscribeToNewDevs } from '../services/socket';\r\n\r\nfunction Main({ navigation }) {\r\n    const [devs, setDevs] = useState([]);\r\n    const [currentRegion, setCurrentRegion] = useState(null);\r\n    const [techs, setTechs] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function loadInitialPosition() {\r\n            const { granted } = await requestPermissionsAsync();\r\n\r\n            if (granted) {\r\n                const { coords } = await getCurrentPositionAsync({\r\n                    enableHighAccuracy: true,\r\n                });\r\n\r\n                const { latitude, longitude } = coords;\r\n\r\n                setCurrentRegion({\r\n                    latitude,\r\n                    longitude,\r\n                    latitudeDelta: 0.04,\r\n                    longitudeDelta: 0.04,\r\n                });\r\n            }\r\n        }\r\n\r\n        loadInitialPosition();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        subscribeToNewDevs(dev => setDevs([...devs, dev]));\r\n    }, [devs]);\r\n\r\n    function setUpWebSocket() {\r\n        disconnect();\r\n\r\n        const {latitude, longitude} = currentRegion;\r\n\r\n        connect(\r\n            latitude,\r\n            longitude,\r\n            techs,\r\n        );\r\n    }\r\n\r\n    async function loadDevs() {\r\n        const { latitude, longitude } = currentRegion;\r\n\r\n        const response = await api.get('/search', {\r\n            params: {\r\n                latitude,\r\n                longitude,\r\n                techs\r\n            }\r\n        });\r\n\r\n        console.log(response.data)\r\n        setDevs(response.data);\r\n        setUpWebSocket();\r\n    }\r\n\r\n    function handleRegionChanged(region) {\r\n        setCurrentRegion(region);\r\n    }\r\n\r\n    if (!currentRegion) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MapView\r\n                onRegionChangeComplete={handleRegionChanged}\r\n                initialRegion={currentRegion}\r\n                style={styles.map}\r\n            >\r\n                {devs.map(dev => (\r\n                    <Marker\r\n                        key={dev._id}\r\n                        coordinate={{\r\n                            latitude: dev.location.coordinates[1],\r\n                            longitude: dev.location.coordinates[0],\r\n                        }}\r\n                    >\r\n\r\n                        <Image style={styles.avatar} source={{ uri: dev.avatar_url }} />\r\n\r\n                        <Callout onPress={() => {\r\n                            navigation.navigate('Profile', { github_username: dev.github_username });\r\n                        }}>\r\n                            <View style={styles.callout}>\r\n                                <Text style={styles.devName}>{dev.name}</Text>\r\n                                <Text style={styles.devBio}>{dev.bio}</Text>\r\n                                <Text style={styles.devTechs}>{dev.techs.join(', ')}</Text>\r\n                            </View>\r\n                        </Callout>\r\n                    </Marker>\r\n                ))}\r\n            </MapView>\r\n\r\n            <View style={styles.searchForm}>\r\n                <TextInput\r\n                    style={styles.searchInput}\r\n                    placeholder=\"Buscar devs por techs\"\r\n                    placeholderTextColor=\"#999\"\r\n                    autoCapitalize=\"words\"\r\n                    autoCorrect={false}\r\n                    value={techs}\r\n                    onChangeText={setTechs}\r\n                />\r\n                <TouchableOpacity onPress={loadDevs} style={styles.loadButton}>\r\n                    <MaterialIcons name=\"my-location\" syze={20} color=\"#FFF\" />\r\n                </TouchableOpacity>\r\n            </View>\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    map: {\r\n        flex: 1\r\n    },\r\n    avatar: {\r\n        width: 54,\r\n        height: 54,\r\n        borderRadius: 4,\r\n        borderWidth: 4,\r\n        borderColor: '#fff',\r\n    },\r\n    callout: {\r\n        width: 260,\r\n    },\r\n    devName: {\r\n        fontWeight: 'bold',\r\n        fontSize: 16,\r\n    },\r\n    devBio: {\r\n        color: '#666',\r\n        marginTop: 5,\r\n    },\r\n    devTechs: {\r\n        marginTop: 5,\r\n    },\r\n    searchForm: {\r\n        position: \"absolute\",\r\n        top: 20,\r\n        left: 20,\r\n        right: 20,\r\n        zIndex: 5,\r\n        flexDirection: \"row\",\r\n    },\r\n    searchInput: {\r\n        flex: 1,\r\n        height: 50,\r\n        backgroundColor: '#fff',\r\n        color: '#333',\r\n        borderRadius: 25,\r\n        paddingHorizontal: 20,\r\n        fontSize: 16,\r\n        shadowColor: '#000',\r\n        shadowOpacity: 0.2,\r\n        shadowOffset: {\r\n            width: 4,\r\n            height: 4,\r\n        },\r\n        elevation: 2,\r\n    },\r\n    loadButton: {\r\n        height: 50,\r\n        width: 50,\r\n        backgroundColor: '#8e4dff',\r\n        borderRadius: 25,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginLeft: 15,\r\n    }\r\n});\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}